trigger:
  batch: false
  branches:
    include:
      - master
      - ci-*
  tags:
    include:
      - '*-ci'

pool:
  vmImage: 'ubuntu-18.04'

steps:
- script: |
    sudo apt-get update
    sudo apt-get install -y bmap-tools curl debian-archive-keyring dosfstools e2fsprogs gdisk gzip libglib2.0-0 libgpgme11 libostree-1-1 parted qemu-system-x86 qemu-user-static systemd-container zsync
    sudo cp /usr/share/keyrings/debian-archive-keyring.gpg /etc/apt/trusted.gpg.d/debian-archive-keyring.gpg
    echo "deb http://deb.debian.org/debian testing main" | sudo tee /etc/apt/sources.list.d/debian-testing.list
    sudo apt-get update
    sudo apt-get install --no-install-recommends -y debos
  displayName: Switch Ubuntu repo to bionic and add debian testing repository for debos
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'specific'
    project: 'rock-builds'
    pipeline: 'sigmaris.u-boot'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    downloadType: 'single'
    artifactName: 'uboot'
    downloadPath: '$(Build.ArtifactStagingDirectory)'
  displayName: Download u-boot files
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'specific'
    project: 'rock-builds'
    pipeline: 'sigmaris.linux'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    downloadType: 'specific'
    itemPattern: 'linuxdebs/linux-image-*.deb'
    downloadPath: '$(Build.ArtifactStagingDirectory)'
  displayName: Download linux-image package
- script: |
    rm $(Build.ArtifactStagingDirectory)/linuxdebs/linux-image-*-dbg_*_arm64.deb
    sudo debos --verbose --artifactdir="$(Build.ArtifactStagingDirectory)" recipes/buster-rockpro64.yaml
    sudo chown $(id -u):$(id -g) debian-buster-rockpro64.img
    gzip debian-buster-rockpro64.img
  displayName: Run debos to create image then gzip it
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: 'debian-buster-rockpro64.img.gz'
    artifactName: image
  displayName: Publish image as build artifact
