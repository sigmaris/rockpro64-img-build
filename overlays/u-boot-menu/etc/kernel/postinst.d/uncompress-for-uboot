#!/bin/sh

set -e

compress_type() {
	local file="$1"

	# lz4 -t returns true with no args and with zero-size files, check them first
	if [ -z "$file" ] || [ ! -s "$file" ]; then
		echo "none"
	elif gzip -t "$file" >/dev/null 2>/dev/null; then
		echo "gzip"
	elif lz4 -t "$file" >/dev/null 2>/dev/null; then
		echo "lz4"
	elif lzma -t "$file" >/dev/null 2>/dev/null; then
		echo "lzma"
	elif lzop -t "$file" >/dev/null 2>/dev/null; then
		echo "lzop"
	elif bzip2 -t "$file" >/dev/null 2>/dev/null; then
		echo "bzip2"
	elif xz --format=xz -t "$file" >/dev/null 2>/dev/null; then
		echo "xz"
	else
		echo "none"
	fi
}

# Find linux versions
_VERSIONS="$(linux-version list)"

for _VERSION in ${_VERSIONS}
do
	IMAGE="/boot/vmlinuz-${_VERSION}"
	COMPRESSION="$(compress_type "$IMAGE")"

	if [ "$COMPRESSION" = "none" ]
	then
		continue
	fi

	echo "Decompressing ${COMPRESSION}-compressed kernel image ${IMAGE} for u-boot..."

	# Decompress
	{
		case "$COMPRESSION" in
			gzip) gzip -d ;;
			lz4) lz4 -d ;;
			lzma) lzma -d ;;
			lzop) lzop -d ;;
			bzip2) bzip2 -d ;;
			xz) xz -d ;;
			*) echo "Unexpected result '$COMPRESSION' from compression detection." >&2; exit 1; ;;
		esac
	} < "$IMAGE" > "/boot/.tmp.decompressed-${_VERSION}"
	mv "/boot/.tmp.decompressed-${_VERSION}" "$IMAGE"
done
